{
	"info": {
		"_postman_id": "20937979-5af1-4504-a7d6-268bc1fd6f66",
		"name": "Users Test",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "16381010"
	},
	"item": [
		{
			"name": "Login",
			"item": [
				{
					"name": "Login - Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status code is not 500\", function () {",
									"    pm.response.to.not.have.status(500);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Response is json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response have correct properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"data\");",
									"    pm.expect(jsonData.data).to.have.property(\"token\");",
									"    pm.expect(jsonData.data.token).to.be.an(\"string\");",
									"    pm.expect(jsonData.data).to.have.property(\"user\");",
									"    pm.expect(jsonData.data).to.have.property(\"role\");",
									"",
									"    pm.collectionVariables.set(\"token\", jsonData.data.token);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"eduardcruz.contact@gmail.com\",\n    \"password\": \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login - Invalid Credentials",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Status code is not 200\", function () {",
									"    pm.response.to.not.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Response is json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response have correct properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"error\");",
									"    pm.expect(jsonData.error).to.have.property(\"message\");",
									"    pm.expect(jsonData.error.message).to.be.an(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"noexiste@gmail.com\",\n    \"password\": \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				},
				{
					"name": "Login - Invalid Request",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code is not 200\", function () {",
									"    pm.response.to.not.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Response is json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response have correct properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"error\");",
									"    pm.expect(jsonData.error).to.have.property(\"message\");",
									"    pm.expect(jsonData.error.message).to.be.an(\"string\");",
									"    pm.expect(jsonData.error).to.have.property(\"detail\");",
									"    pm.expect(jsonData.error.detail).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"noesunemail\",\n    \"password\": \"123\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"auth",
								"login"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Get All Users",
			"item": [
				{
					"name": "Get All - Complete Filters - Success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status code is not 500\", function () {",
									"    pm.response.to.not.have.status(500);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Response is json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response have correct properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"data\");",
									"    pm.expect(jsonData.data).to.have.property(\"docs\");",
									"    pm.expect(jsonData.data.docs).to.be.an(\"array\");",
									"    pm.expect(jsonData.data).to.have.property(\"totalDocs\");",
									"    pm.expect(jsonData.data.totalDocs).to.be.an(\"number\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/v1/users?filter[firstName]=Eduard&filter[lastName]=Cruz&filter[email]=salikintres2001@gmail.com&options[limit]=10&options[offset]=0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"users"
							],
							"query": [
								{
									"key": "filter[firstName]",
									"value": "Eduard"
								},
								{
									"key": "filter[lastName]",
									"value": "Cruz"
								},
								{
									"key": "filter[email]",
									"value": "salikintres2001@gmail.com"
								},
								{
									"key": "options[limit]",
									"value": "10"
								},
								{
									"key": "options[offset]",
									"value": "0"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All - Without Token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 401\", function () {",
									"    pm.response.to.have.status(401);",
									"});",
									"",
									"pm.test(\"Status code is not 500\", function () {",
									"    pm.response.to.not.have.status(500);",
									"});",
									"",
									"pm.test(\"Status code is not 200\", function () {",
									"    pm.response.to.not.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Response is json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response have correct properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"error\");",
									"    pm.expect(jsonData.error).to.have.property(\"message\");",
									"    pm.expect(jsonData.error.message).to.be.an(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:3000/api/v1/users?filter[firstName]=Eduard&filter[lastName]=Cruz&filter[email]=salikintres2001@gmail.com&options[limit]=10&options[offset]=0",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"users"
							],
							"query": [
								{
									"key": "filter[firstName]",
									"value": "Eduard"
								},
								{
									"key": "filter[lastName]",
									"value": "Cruz"
								},
								{
									"key": "filter[email]",
									"value": "salikintres2001@gmail.com"
								},
								{
									"key": "options[limit]",
									"value": "10"
								},
								{
									"key": "options[offset]",
									"value": "0"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create User",
			"item": [
				{
					"name": "Create User - Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"randomNumber\", Math.random());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 201\", function () {",
									"    pm.response.to.have.status(201);",
									"});",
									"",
									"pm.test(\"Status code is not 500\", function () {",
									"    pm.response.to.not.have.status(500);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Response is json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response have correct properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"data\");",
									"    pm.expect(jsonData.data).to.have.property(\"email\");",
									"    pm.expect(jsonData.data.email).to.be.an(\"string\");",
									"    pm.expect(jsonData.data).to.have.property(\"_id\");",
									"    pm.expect(jsonData.data._id).to.be.an(\"string\");",
									"    pm.collectionVariables.set(\"userId\", jsonData.data._id);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Eduard\",\n    \"lastName\": \"Cruz\",\n    \"email\": \"{{randomNumber}}@gmail.com\",\n    \"password\": \"123\",\n    \"birthdate\": \"09/23/2001\",\n    \"role\": \"USER\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/users/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"users",
								""
							]
						}
					},
					"response": []
				},
				{
					"name": "Create User - Failure",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.collectionVariables.set(\"randomNumber\", Math.random());"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code is not 500\", function () {",
									"    pm.response.to.not.have.status(500);",
									"});",
									"",
									"pm.test(\"Status code is not 200\", function () {",
									"    pm.response.to.not.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Response is json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response have correct properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"error\");",
									"    pm.expect(jsonData.error).to.have.property(\"message\");",
									"    pm.expect(jsonData.error.message).to.be.an(\"string\");",
									"    pm.expect(jsonData.error).to.have.property(\"detail\");",
									"    pm.expect(jsonData.error.detail).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Eduard\",\n    \"lastName\": \"Cruz\",\n    \"email\": \"salikintres2001@gmail.com\",\n    \"password\": \"123\",\n    \"birthdate\": \"09/23/2001\",\n    \"role\": \"USER\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/users/",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"users",
								""
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Update User",
			"item": [
				{
					"name": "Update User - Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status code is not 500\", function () {",
									"    pm.response.to.not.have.status(500);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Response is json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response have correct properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"data\");",
									"    pm.expect(jsonData.data).to.have.property(\"email\");",
									"    pm.expect(jsonData.data.email).to.be.an(\"string\");",
									"    pm.expect(jsonData.data).to.have.property(\"_id\");",
									"    pm.expect(jsonData.data._id).to.be.an(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Ferney\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/users/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User - Failure",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code is not 500\", function () {",
									"    pm.response.to.not.have.status(500);",
									"});",
									"",
									"pm.test(\"Status code is not 200\", function () {",
									"    pm.response.to.not.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Response is json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response have correct properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"error\");",
									"    pm.expect(jsonData.error).to.have.property(\"message\");",
									"    pm.expect(jsonData.error.message).to.be.an(\"string\");",
									"    pm.expect(jsonData.error).to.have.property(\"detail\");",
									"    pm.expect(jsonData.error.detail).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"firstName\": \"Ferney\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "http://localhost:3000/api/v1/users/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "abc123"
								}
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Delete User",
			"item": [
				{
					"name": "Delete User - Success",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 200\", function () {",
									"    pm.response.to.have.status(200);",
									"});",
									"",
									"pm.test(\"Status code is not 500\", function () {",
									"    pm.response.to.not.have.status(500);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Response is json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response have correct properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"data\");",
									"    pm.expect(jsonData.data).to.have.property(\"email\");",
									"    pm.expect(jsonData.data.email).to.be.an(\"string\");",
									"    pm.expect(jsonData.data).to.have.property(\"_id\");",
									"    pm.expect(jsonData.data._id).to.be.an(\"string\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/v1/users/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "{{userId}}"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete User - Failure",
					"event": [
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 400\", function () {",
									"    pm.response.to.have.status(400);",
									"});",
									"",
									"pm.test(\"Status code is not 500\", function () {",
									"    pm.response.to.not.have.status(500);",
									"});",
									"",
									"pm.test(\"Status code is not 200\", function () {",
									"    pm.response.to.not.have.status(200);",
									"});",
									"",
									"pm.test(\"Response time is less than 500ms\", function () {",
									"    pm.expect(pm.response.responseTime).to.be.below(500);",
									"});",
									"",
									"pm.test(\"Response is json\", function () {",
									"    pm.response.to.be.json;",
									"});",
									"",
									"pm.test(\"Response have correct properties\", function () {",
									"    var jsonData = pm.response.json();",
									"    pm.expect(jsonData).to.have.property(\"error\");",
									"    pm.expect(jsonData.error).to.have.property(\"message\");",
									"    pm.expect(jsonData.error.message).to.be.an(\"string\");",
									"    pm.expect(jsonData.error).to.have.property(\"detail\");",
									"    pm.expect(jsonData.error.detail).to.be.an(\"array\");",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"value": "{{token}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "http://localhost:3000/api/v1/users/:id",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "3000",
							"path": [
								"api",
								"v1",
								"users",
								":id"
							],
							"variable": [
								{
									"key": "id",
									"value": "abc123"
								}
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "randomNumber",
			"value": ""
		},
		{
			"key": "userId",
			"value": ""
		}
	]
}